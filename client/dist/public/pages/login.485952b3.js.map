{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,SCIA,eAAe,EAAa,CAAK,CAAE,CAAI,EACrC,GAAI,CAEF,MAAO,AADU,CAAA,MAAM,AAAA,CAAA,EAAA,EAAA,OAAI,AAAJ,EAAM,IAAI,CAAC,oCAAqC,CAAE,MAAA,EAAO,KAAA,CAAK,EAAA,EACrE,IAAI,AACtB,CAAE,MAAO,EAAO,CAEd,MADA,QAAQ,KAAK,CAAC,+BAAgC,GACxC,CACR,CACF,CAEA,AAZkB,SAAS,aAAa,CAAC,eAY/B,gBAAgB,CAAC,SAAU,eAAgB,CAAC,EACpD,EAAE,cAAc,GAChB,IAAM,EAAQ,SAAS,aAAa,CAAC,UAAU,KAAK,CAC9C,EAAW,SAAS,aAAa,CAAC,aAAa,KAAK,CAG1D,GAAI,CAAC,GAAS,CAAC,EAAU,CACvB,MAAM,2CACN,MACF,CAEA,GAAI,CACF,IAAM,EAAe,MAAM,EAAa,EAAO,EAC3C,AAAsB,CAAA,IAAtB,EAAa,IAAI,CAEnB,OAAO,QAAQ,CAAC,IAAI,CAAG,oBAGvB,OAAO,QAAQ,CAAC,IAAI,CAAG,aAE3B,CAAE,MAAO,EAAO,CAEV,EAAM,QAAQ,EAAI,AAA0B,MAA1B,EAAM,QAAQ,CAAC,MAAM,CAEzC,MAAM,gEAGN,QAAQ,KAAK,CAAC,+BAAgC,GAC9C,MAAM,qDAEV,CACF","sources":["<anon>","public/javascripts/login.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequiree8ef\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequiree8ef\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $fmRoT = parcelRequire(\"fmRoT\");\nconst $bdfd31eb6b28235a$var$formLogin = document.querySelector(\"#form-login\");\nasync function $bdfd31eb6b28235a$var$getLoginData(email, pass) {\n    try {\n        const response = await (0, $fmRoT.default).post(\"http://localhost:3000/users/login\", {\n            email: email,\n            pass: pass\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"\\u0110\\xe3 x\\u1EA3y ra l\\u1ED7i khi \\u0111\\u0103ng nh\\u1EADp:\", error);\n        throw error;\n    }\n}\n$bdfd31eb6b28235a$var$formLogin.addEventListener(\"submit\", async function(e) {\n    e.preventDefault();\n    const email = document.querySelector(\"#email\").value;\n    const password = document.querySelector(\"#password\").value;\n    // Kiểm tra xem email và mật khẩu có được nhập vào không\n    if (!email || !password) {\n        alert(\"Vui l\\xf2ng nh\\u1EADp \\u0111\\u1EA7y \\u0111\\u1EE7 email v\\xe0 m\\u1EADt kh\\u1EA9u.\");\n        return;\n    }\n    try {\n        const responseData = await $bdfd31eb6b28235a$var$getLoginData(email, password);\n        if (responseData.role === 1) // Nếu vai trò là 1 (admin), chuyển hướng đến trang admin.html\n        window.location.href = \"/admin/admin.html\";\n        else // Nếu không phải là admin, chuyển hướng đến trang index.html hoặc trang khác tùy thuộc vào logic của bạn\n        window.location.href = \"/index.html\";\n    } catch (error) {\n        // Nếu có lỗi từ phía máy chủ, hoặc thông tin đăng nhập không chính xác, xử lý lỗi ở đây\n        if (error.response && error.response.status === 401) // Nếu lỗi là lỗi xác thực (401 Unauthorized), thông báo lỗi\n        alert(\"Email ho\\u1EB7c m\\u1EADt kh\\u1EA9u kh\\xf4ng ch\\xednh x\\xe1c. Vui l\\xf2ng ki\\u1EC3m tra l\\u1EA1i.\");\n        else {\n            // Nếu có lỗi khác từ phía máy chủ, hoặc lỗi không mong muốn, thông báo lỗi chung\n            console.error(\"\\u0110\\xe3 x\\u1EA3y ra l\\u1ED7i khi \\u0111\\u0103ng nh\\u1EADp:\", error);\n            alert(\"\\u0110\\u0103ng nh\\u1EADp kh\\xf4ng th\\xe0nh c\\xf4ng. Vui l\\xf2ng th\\u1EED l\\u1EA1i sau.\");\n        }\n    }\n}); // async function loginUser(email, password) {\n //   try {\n //     // Gửi yêu cầu POST đến endpoint /login với thông tin đăng nhập\n //     const response = await axios.post(\"http://localhost:3000/users/login\", {\n //       email: email,\n //       password: password,\n //     });\n //     // Trả về dữ liệu phản hồi từ máy chủ\n //     const responseData = response.data;\n //     // Kiểm tra xem đăng nhập có thành công không\n //     if (responseData.success) {\n //       // Nếu đăng nhập thành công, kiểm tra vai trò người dùng và chuyển hướng đến trang tương ứng\n //       if (responseData.role === \"admin\") {\n //         // Nếu người dùng là admin, chuyển hướng đến trang admin.html\n //         window.location.href = \"/admin/admin.html\";\n //       } else {\n //         // Nếu không phải là admin, chuyển hướng đến trang index.html\n //         window.location.href = \"/index.html\";\n //       }\n //     } else {\n //       // Nếu đăng nhập không thành công, hiển thị thông báo lỗi\n //       alert(\"Đăng nhập không thành công. Vui lòng kiểm tra lại email và mật khẩu.\");\n //     }\n //   } catch (error) {\n //     // Xử lý lỗi nếu có\n //     console.error(\"Lỗi khi đăng nhập:\", error);\n //     alert(\"Đăng nhập không thành công. Vui lòng thử lại sau.\");\n //   }\n // }\n // async function getLoginData(email, pass) {\n //   try {\n //     const response = await axios.post(\"http://localhost:3000/users/login\", { email, pass });\n //     return response.data;\n //   } catch (error) {\n //     console.error(\"Đã xảy ra lỗi khi đăng nhập:\", error);\n //     throw error;\n //   }\n // }\n // formLogin.addEventListener(\"submit\", async function (e) {\n //   e.preventDefault();\n //   const email = document.querySelector(\"#email\").value;\n //   const password = document.querySelector(\"#password\").value;\n //   try {\n //     await getLoginData(email, password);\n //     // localStorage.setItem(\"token\", result.token);\n //     alert(\"Đăng nhập thành công\");\n //     window.location.href = \"/admin/admin.html\";\n //   } catch (error) {\n //     // Xử lý lỗi nếu cần\n //     alert(\"Đăng nhập thất bại. Vui lòng thử lại.\");\n //   }\n // });\n\n\n//# sourceMappingURL=login.485952b3.js.map\n","import axios from \"axios\";\n\nconst formLogin = document.querySelector(\"#form-login\");\n\nasync function getLoginData(email, pass) {\n  try {\n    const response = await axios.post(\"http://localhost:3000/users/login\", { email, pass });\n    return response.data;\n  } catch (error) {\n    console.error(\"Đã xảy ra lỗi khi đăng nhập:\", error);\n    throw error;\n  }\n}\n\nformLogin.addEventListener(\"submit\", async function (e) {\n  e.preventDefault();\n  const email = document.querySelector(\"#email\").value;\n  const password = document.querySelector(\"#password\").value;\n\n  // Kiểm tra xem email và mật khẩu có được nhập vào không\n  if (!email || !password) {\n    alert(\"Vui lòng nhập đầy đủ email và mật khẩu.\");\n    return;\n  }\n\n  try {\n    const responseData = await getLoginData(email, password);\n    if (responseData.role === 1) {\n      // Nếu vai trò là 1 (admin), chuyển hướng đến trang admin.html\n      window.location.href = \"/admin/admin.html\";\n    } else {\n      // Nếu không phải là admin, chuyển hướng đến trang index.html hoặc trang khác tùy thuộc vào logic của bạn\n      window.location.href = \"/index.html\";\n    }\n  } catch (error) {\n    // Nếu có lỗi từ phía máy chủ, hoặc thông tin đăng nhập không chính xác, xử lý lỗi ở đây\n    if (error.response && error.response.status === 401) {\n      // Nếu lỗi là lỗi xác thực (401 Unauthorized), thông báo lỗi\n      alert(\"Email hoặc mật khẩu không chính xác. Vui lòng kiểm tra lại.\");\n    } else {\n      // Nếu có lỗi khác từ phía máy chủ, hoặc lỗi không mong muốn, thông báo lỗi chung\n      console.error(\"Đã xảy ra lỗi khi đăng nhập:\", error);\n      alert(\"Đăng nhập không thành công. Vui lòng thử lại sau.\");\n    }\n  }\n});\n\n// async function loginUser(email, password) {\n//   try {\n//     // Gửi yêu cầu POST đến endpoint /login với thông tin đăng nhập\n//     const response = await axios.post(\"http://localhost:3000/users/login\", {\n//       email: email,\n//       password: password,\n//     });\n\n//     // Trả về dữ liệu phản hồi từ máy chủ\n//     const responseData = response.data;\n\n//     // Kiểm tra xem đăng nhập có thành công không\n//     if (responseData.success) {\n//       // Nếu đăng nhập thành công, kiểm tra vai trò người dùng và chuyển hướng đến trang tương ứng\n//       if (responseData.role === \"admin\") {\n//         // Nếu người dùng là admin, chuyển hướng đến trang admin.html\n//         window.location.href = \"/admin/admin.html\";\n//       } else {\n//         // Nếu không phải là admin, chuyển hướng đến trang index.html\n//         window.location.href = \"/index.html\";\n//       }\n//     } else {\n//       // Nếu đăng nhập không thành công, hiển thị thông báo lỗi\n//       alert(\"Đăng nhập không thành công. Vui lòng kiểm tra lại email và mật khẩu.\");\n//     }\n//   } catch (error) {\n//     // Xử lý lỗi nếu có\n//     console.error(\"Lỗi khi đăng nhập:\", error);\n//     alert(\"Đăng nhập không thành công. Vui lòng thử lại sau.\");\n//   }\n// }\n// async function getLoginData(email, pass) {\n//   try {\n//     const response = await axios.post(\"http://localhost:3000/users/login\", { email, pass });\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Đã xảy ra lỗi khi đăng nhập:\", error);\n//     throw error;\n//   }\n// }\n\n// formLogin.addEventListener(\"submit\", async function (e) {\n//   e.preventDefault();\n//   const email = document.querySelector(\"#email\").value;\n//   const password = document.querySelector(\"#password\").value;\n//   try {\n//     await getLoginData(email, password);\n//     // localStorage.setItem(\"token\", result.token);\n//     alert(\"Đăng nhập thành công\");\n//     window.location.href = \"/admin/admin.html\";\n//   } catch (error) {\n//     // Xử lý lỗi nếu cần\n//     alert(\"Đăng nhập thất bại. Vui lòng thử lại.\");\n//   }\n// });\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$fmRoT","$bdfd31eb6b28235a$var$getLoginData","email","pass","response","default","post","data","error","console","$bdfd31eb6b28235a$var$formLogin","document","querySelector","addEventListener","e","preventDefault","value","password","alert","responseData","role","window","location","href","status"],"version":3,"file":"login.485952b3.js.map"}